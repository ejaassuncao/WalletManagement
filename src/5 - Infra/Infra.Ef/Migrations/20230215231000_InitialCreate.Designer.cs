// <auto-generated />
using System;
using Infra.Ef.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Ef.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230215231000_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Core.Model.Company", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CIdUserCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIdUserLastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("cny_cnpj");

                    b.Property<DateTime>("DCreated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Enabled")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("cny_name");

                    b.Property<Guid?>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("cny_id");

                    b.HasIndex("SectorId");

                    b.HasIndex("SetorId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("Domain.Core.Model.Sector", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CIdUserCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIdUserLastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DCreated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Enabled")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("Domain.Core.Model.Company", b =>
                {
                    b.HasOne("Domain.Core.Model.Sector", null)
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Domain.Core.Model.Sector", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId");

                    b.Navigation("Setor");
                });
#pragma warning restore 612, 618
        }
    }
}
