// <auto-generated />
using System;
using Infra.Ef.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Ef.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230422220013_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infra.Ef.DataModel.TbActive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("act_id");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("act_category");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cpy_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("act_price");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("act_ticker");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("tb_actives", t =>
                        {
                            t.HasComment("sufix: act");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("45e0216a-ca8e-4de2-9a68-0cf189943566"),
                            Category = 0,
                            CompanyId = new Guid("e2d1c8b5-b513-47cc-a135-66eceb9800a7"),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8701),
                            Enabled = true,
                            Price = 10.8m,
                            Ticker = "MGLU3",
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        },
                        new
                        {
                            Id = new Guid("d34e3141-22f5-4c70-91b3-0c1a6a1b9fd9"),
                            Category = 0,
                            CompanyId = new Guid("6dcb24c6-2e32-4f20-9e1a-7907efa8dc2b"),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8710),
                            Enabled = true,
                            Price = 40.7m,
                            Ticker = "BBAS3",
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbActivesOfCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("aoc_id");

                    b.Property<Guid?>("ActiveId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("act_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("aoc_amount");

                    b.Property<Guid?>("BrokerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bkr_id");

                    b.Property<DateTime>("DateOperation")
                        .HasColumnType("datetime2")
                        .HasColumnName("aoc_date_operation");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<int>("Operation")
                        .HasColumnType("int")
                        .HasColumnName("aoc_operation");

                    b.Property<decimal>("UnitCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("aoc_unit_cost");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usu_id");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.Property<Guid?>("WalletId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("wal_Id");

                    b.HasKey("Id");

                    b.HasIndex("ActiveId");

                    b.HasIndex("BrokerId");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletId");

                    b.ToTable("tb_actives_company", t =>
                        {
                            t.HasComment("sufix: aoc");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("976b2d8a-7fc7-454e-9241-123f63274ee5"),
                            ActiveId = new Guid("45e0216a-ca8e-4de2-9a68-0cf189943566"),
                            Amount = 50m,
                            BrokerId = new Guid("03d9e628-6dcb-4bdb-96db-21cfad827cbd"),
                            DateOperation = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8747),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8748),
                            Enabled = true,
                            Operation = 1,
                            UnitCost = 22.5m,
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            UserId = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            WalletId = new Guid("dedd466a-9664-4c55-be20-acd652ae23d9")
                        },
                        new
                        {
                            Id = new Guid("9073d8d5-a171-4bdc-8a3f-a64b98b9da64"),
                            ActiveId = new Guid("d34e3141-22f5-4c70-91b3-0c1a6a1b9fd9"),
                            Amount = 200m,
                            BrokerId = new Guid("03d9e628-6dcb-4bdb-96db-21cfad827cbd"),
                            DateOperation = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8758),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8759),
                            Enabled = true,
                            Operation = 1,
                            UnitCost = 43.5m,
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            UserId = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            WalletId = new Guid("dedd466a-9664-4c55-be20-acd652ae23d9")
                        },
                        new
                        {
                            Id = new Guid("e97265f3-46c3-477e-bf58-39d5a2f7930e"),
                            ActiveId = new Guid("d34e3141-22f5-4c70-91b3-0c1a6a1b9fd9"),
                            Amount = 200.121m,
                            BrokerId = new Guid("03d9e628-6dcb-4bdb-96db-21cfad827cbd"),
                            DateOperation = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8763),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8763),
                            Enabled = true,
                            Operation = 1,
                            UnitCost = 43.5m,
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            UserId = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            WalletId = new Guid("dedd466a-9664-4c55-be20-acd652ae23d9")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbBroker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bkr_id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("bkr_cnpj");

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("bkr_corporate_name");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<string>("FantasyName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("bkr_fantasy_name");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.ToTable("tb_broker", t =>
                        {
                            t.HasComment("sufix: bkr");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("03d9e628-6dcb-4bdb-96db-21cfad827cbd"),
                            CNPJ = "48.537.525/0001-01",
                            CorporateName = "Itau",
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8590),
                            Enabled = true,
                            FantasyName = "Itau investimentos",
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cpy_id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("cpy_cnpj");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("cpy_name");

                    b.Property<Guid?>("SetorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sct_id");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("tb_company", t =>
                        {
                            t.HasComment("sufix: cpy");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2d1c8b5-b513-47cc-a135-66eceb9800a7"),
                            CNPJ = "48.537.555/0001-01",
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8667),
                            Enabled = true,
                            Name = "Magazine Luiza",
                            SetorId = new Guid("4fbe2b01-2ea9-44ee-a1aa-40592c86bd33"),
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        },
                        new
                        {
                            Id = new Guid("6dcb24c6-2e32-4f20-9e1a-7907efa8dc2b"),
                            CNPJ = "48.537.523/0001-01",
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8673),
                            Enabled = true,
                            Name = "Banco do Brasil",
                            SetorId = new Guid("e061d812-c259-4294-9a6a-644545614ef6"),
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sct_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("sct_name");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.ToTable("tb_sector", t =>
                        {
                            t.HasComment("sufix: sct");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fbe2b01-2ea9-44ee-a1aa-40592c86bd33"),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8526),
                            Enabled = true,
                            Name = "Varejo",
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        },
                        new
                        {
                            Id = new Guid("e061d812-c259-4294-9a6a-644545614ef6"),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8534),
                            Enabled = true,
                            Name = "Financeiro",
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usu_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("usu_login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("usu_password");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.ToTable("tb_user", t =>
                        {
                            t.HasComment("sufix: usu");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(7587),
                            Enabled = true,
                            Login = "elton",
                            Password = "123456",
                            UserCreated = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("wal_Id");

                    b.Property<Guid?>("BrokerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bkr_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("wal_name");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usu_id");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.HasIndex("BrokerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("tb_wallet", t =>
                        {
                            t.HasComment("sufix: wal");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("dedd466a-9664-4c55-be20-acd652ae23d9"),
                            BrokerId = new Guid("03d9e628-6dcb-4bdb-96db-21cfad827cbd"),
                            Dcreated = new DateTime(2023, 4, 22, 19, 0, 13, 579, DateTimeKind.Local).AddTicks(8627),
                            Enabled = true,
                            Name = "Minha Carteira",
                            OwnerId = new Guid("2ba5b6d4-28e2-4b81-a0df-df546d2969fd"),
                            UserCreated = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbActive", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbActivesOfCompany", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbActive", "Active")
                        .WithMany()
                        .HasForeignKey("ActiveId");

                    b.HasOne("Infra.Ef.DataModel.TbBroker", "Broker")
                        .WithMany()
                        .HasForeignKey("BrokerId");

                    b.HasOne("Infra.Ef.DataModel.TbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Infra.Ef.DataModel.TbWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId");

                    b.Navigation("Active");

                    b.Navigation("Broker");

                    b.Navigation("User");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbCompany", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbSector", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbWallet", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbBroker", "Broker")
                        .WithMany()
                        .HasForeignKey("BrokerId");

                    b.HasOne("Infra.Ef.DataModel.TbUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Broker");

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
