// <auto-generated />
using System;
using Infra.Ef.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Ef.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infra.Ef.DataModel.TbActive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("act_id");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("act_category");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cpy_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("act_price");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("act_ticker");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("tb_actives", t =>
                        {
                            t.HasComment("sufix: act");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9eeca7c-d0e3-4294-a769-b4e36dc82f95"),
                            Category = 0,
                            CompanyId = new Guid("c80d4354-911b-4889-a9ac-94c60045f9d0"),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4066),
                            Enabled = true,
                            Price = 10.8m,
                            Ticker = "MGLU3",
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        },
                        new
                        {
                            Id = new Guid("acf27b5b-a9f8-4ac0-8fe5-fd0f17941447"),
                            Category = 0,
                            CompanyId = new Guid("ed4b6c00-5848-4173-9888-d3b9f7fcd3a1"),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4069),
                            Enabled = true,
                            Price = 40.7m,
                            Ticker = "BBAS3",
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbActivesOfCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("aoc_id");

                    b.Property<Guid?>("ActiveId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("act_id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("aoc_amount");

                    b.Property<Guid?>("BrokerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bkr_id");

                    b.Property<DateTime>("DateOperation")
                        .HasColumnType("datetime2")
                        .HasColumnName("aoc_date_operation");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<int>("Operation")
                        .HasColumnType("int")
                        .HasColumnName("aoc_operation");

                    b.Property<decimal>("UnitCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("aoc_unit_cost");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usu_id");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.Property<Guid?>("WalletId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("wal_Id");

                    b.HasKey("Id");

                    b.HasIndex("ActiveId");

                    b.HasIndex("BrokerId");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletId");

                    b.ToTable("tb_actives_company", t =>
                        {
                            t.HasComment("sufix: aoc");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("31c7a2e3-ffec-4aee-8692-9c215f493ecb"),
                            ActiveId = new Guid("f9eeca7c-d0e3-4294-a769-b4e36dc82f95"),
                            Amount = 50,
                            BrokerId = new Guid("bfcd16d5-802b-4889-b214-378d114b5afd"),
                            DateOperation = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4086),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4087),
                            Enabled = true,
                            Operation = 1,
                            UnitCost = 22.5m,
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3"),
                            UserId = new Guid("c2636988-dabd-4ddf-b782-28af250716b3"),
                            WalletId = new Guid("0fadeed8-6373-425c-8cd1-a3a9f53c9e3d")
                        },
                        new
                        {
                            Id = new Guid("e59eeda6-d77d-44e4-b47e-d5385d65f2a0"),
                            ActiveId = new Guid("acf27b5b-a9f8-4ac0-8fe5-fd0f17941447"),
                            Amount = 200,
                            BrokerId = new Guid("bfcd16d5-802b-4889-b214-378d114b5afd"),
                            DateOperation = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4092),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4093),
                            Enabled = true,
                            Operation = 1,
                            UnitCost = 43.5m,
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3"),
                            UserId = new Guid("c2636988-dabd-4ddf-b782-28af250716b3"),
                            WalletId = new Guid("0fadeed8-6373-425c-8cd1-a3a9f53c9e3d")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbBroker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bkr_id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("bkr_cnpj");

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("bkr_corporate_name");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<string>("FantasyName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("bkr_fantasy_name");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.ToTable("tb_broker", t =>
                        {
                            t.HasComment("sufix: bkr");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("bfcd16d5-802b-4889-b214-378d114b5afd"),
                            CNPJ = "48.537.525/0001-01",
                            CorporateName = "Itau",
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4017),
                            Enabled = true,
                            FantasyName = "Itau investimentos",
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cpy_id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("cpy_cnpj");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("cpy_name");

                    b.Property<Guid?>("SetorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sct_id");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("tb_company", t =>
                        {
                            t.HasComment("sufix: cpy");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("c80d4354-911b-4889-a9ac-94c60045f9d0"),
                            CNPJ = "48.537.555/0001-01",
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4049),
                            Enabled = true,
                            Name = "Magazine Luiza",
                            SetorId = new Guid("f2920b4d-0200-4c81-84ec-56b91f8cd8d2"),
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        },
                        new
                        {
                            Id = new Guid("ed4b6c00-5848-4173-9888-d3b9f7fcd3a1"),
                            CNPJ = "48.537.523/0001-01",
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4051),
                            Enabled = true,
                            Name = "Banco do Brasil",
                            SetorId = new Guid("4a5d4eb1-b025-4f1d-8501-4325ac872067"),
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sct_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("sct_name");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.ToTable("tb_sector", t =>
                        {
                            t.HasComment("sufix: sct");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2920b4d-0200-4c81-84ec-56b91f8cd8d2"),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(3991),
                            Enabled = true,
                            Name = "Varejo",
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        },
                        new
                        {
                            Id = new Guid("4a5d4eb1-b025-4f1d-8501-4325ac872067"),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(3994),
                            Enabled = true,
                            Name = "Financeiro",
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usu_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("usu_login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("usu_password");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.ToTable("tb_user", t =>
                        {
                            t.HasComment("sufix: usu");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2636988-dabd-4ddf-b782-28af250716b3"),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(3720),
                            Enabled = true,
                            Login = "elton",
                            Password = "123456",
                            UserCreated = new Guid("c2636988-dabd-4ddf-b782-28af250716b3")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("wal_Id");

                    b.Property<Guid?>("BrokerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bkr_id");

                    b.Property<DateTime>("Dcreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("wal_name");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usu_id");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_created");

                    b.Property<Guid?>("UserLastUpdate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_last_update");

                    b.HasKey("Id");

                    b.HasIndex("BrokerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("tb_wallet", t =>
                        {
                            t.HasComment("sufix: wal");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fadeed8-6373-425c-8cd1-a3a9f53c9e3d"),
                            BrokerId = new Guid("bfcd16d5-802b-4889-b214-378d114b5afd"),
                            Dcreated = new DateTime(2023, 4, 21, 22, 19, 12, 149, DateTimeKind.Local).AddTicks(4031),
                            Enabled = true,
                            Name = "Minha Carteira",
                            OwnerId = new Guid("c2636988-dabd-4ddf-b782-28af250716b3"),
                            UserCreated = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbActive", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbActivesOfCompany", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbActive", "Active")
                        .WithMany()
                        .HasForeignKey("ActiveId");

                    b.HasOne("Infra.Ef.DataModel.TbBroker", "Broker")
                        .WithMany()
                        .HasForeignKey("BrokerId");

                    b.HasOne("Infra.Ef.DataModel.TbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Infra.Ef.DataModel.TbWallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId");

                    b.Navigation("Active");

                    b.Navigation("Broker");

                    b.Navigation("User");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbCompany", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbSector", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("Infra.Ef.DataModel.TbWallet", b =>
                {
                    b.HasOne("Infra.Ef.DataModel.TbBroker", "Broker")
                        .WithMany()
                        .HasForeignKey("BrokerId");

                    b.HasOne("Infra.Ef.DataModel.TbUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Broker");

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
